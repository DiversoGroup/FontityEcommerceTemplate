const API_URL = process.env.NEXT_PUBLIC_WP_API_URL;

async function fetchAPI(query, { variables } = {}) {
  const headers = { 'Content-Type': 'application/json' };

  const res = await fetch(API_URL, {
    method: 'POST',
    headers,
    body: JSON.stringify({ query, variables }),
  });

  const json = await res.json();

  if (json.errors) {
    console.log(json.errors);
    console.log('Error Details', query, variables);
    throw new Error('Failed to fetch API');
  }

  return json.data;
}

// Function to fetch all posts from the API.
export async function getAllPosts() {
  const query = `
  query AllPosts {
    posts(first: 20, where: { orderby: { field: DATE, order: DESC}}) {
      edges {
        node {
          databaseId
          date
          title
          slug
        content
        }
        }
    }
  }
  `;

  const data = await fetchAPI(query);

  return data?.posts;
}

// Function to get all blog post slugs.
export async function getAllPostSlugs() {
  const query = `
    query AllPosts {
        posts(first: 20, where: { orderby: { field: DATE, order: DESC}}) {
        edges {
            node {
            slug
            }
            }
        }
    }
    `;

  const data = await fetchAPI(query);

  return data?.posts;
}

// Add function to get an individual blog post's data
export async function getPostBySlug(slug) {
  const query = `
        query PostBySlug($id: ID!, $idType: PostIdType!) {
            post(where: { id: $id, idType: $idType }) {
            ...PostFields
            content
            }
        }

        fragment PostFields on Post {
            databaseId
            date
            title
            slug
            featuredImage {
                node {
                    sourceUrl
                }
            }
        }
        `;

  const data = await fetchAPI(query, {
    variables: {
      id: slug,
      idType: 'SLUG',
    },
  });

  return data?.post;
}
